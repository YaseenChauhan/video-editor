[{"E:\\my-app\\src\\index.js":"1","E:\\my-app\\src\\App.js":"2","E:\\my-app\\src\\reportWebVitals.js":"3","E:\\my-app\\src\\components\\Navbar.js":"4","E:\\my-app\\src\\components\\Player.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":456,"mtime":1610616513779,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":552,"mtime":1610442220677,"results":"10","hashOfConfig":"7"},{"size":10307,"mtime":1610707200147,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"bkly53",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"E:\\my-app\\src\\index.js",[],["25","26"],"E:\\my-app\\src\\App.js",["27","28"],"import './App.css';\nimport './styles/app.scss'\nimport NavBar from './components/Navbar';\nimport Player from './components/Player';\nimport { useState } from 'react';\n\nfunction App() {\n  const [isVisible, setVisible] = useState(false);\n  return (\n    <div className={`App ${isVisible && `app-push`}`}>\n      <header className=\"App-header\">\n       {/* <NavBar /> */}\n       Video Editor\n      </header>\n      <Player />\n    </div>\n  );\n}\n\nexport default App;\n","E:\\my-app\\src\\reportWebVitals.js",[],"E:\\my-app\\src\\components\\Navbar.js",[],"E:\\my-app\\src\\components\\Player.js",["29","30","31","32","33","34","35","36","37","38","39"],"import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlay, faPause, faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\r\nimport ReactPlayer from 'react-player';\r\nimport Dropzone from \"react-dropzone\";\r\n// import DragAndDrop from './DragAndDrop';\r\nimport InputRange from 'react-input-range';\r\nclass Player extends React.Component {\r\n\r\n    state = {\r\n        video: \"\",\r\n        videoPreviewUrl: \"\",\r\n        videoLoaded : false,\r\n        value: { min: 2, max: 10 }\r\n    }\r\n    pl = React.createRef();\r\n    images = [];\r\n    onFileChange = (event) => {\r\n        event.preventDefault();\r\n        let reader = new FileReader();\r\n        let file = event.target.files[0];\r\n        console.log(event.target.files[0])\r\n        reader.onloadend = () => {\r\n            this.setState({\r\n                video: file,\r\n                videoPreviewUrl: reader.result,\r\n                videoLoaded: true\r\n            }, () => console.log(this.state));\r\n        }\r\n\r\n        reader.readAsDataURL(file)\r\n    }\r\n\r\n    handleDrop = (file) => {\r\n        console.log(file);\r\n        console.log(typeof file[0])\r\n        let reader = new FileReader();\r\n        reader.onloadend = () => {\r\n            this.setState({\r\n                video: file[0],\r\n                videoPreviewUrl: reader.result,\r\n                videoLoaded: true,\r\n                percentagePlayed : 0\r\n            }, () => console.log(this.state));\r\n        }\r\n\r\n        reader.readAsDataURL(file[0])\r\n    }\r\n\r\n    onSeek = (data) => {\r\n        console.log('on dseek', data)\r\n    }\r\n\r\n    onProgress = (data) => {\r\n        // console.log('progress', data);\r\n        // console.log('rfe', this.pl.current.getDuration())\r\n        let percentage = ( data / this.pl.current.getDuration() ) * 100;\r\n        this.setState({\r\n            percentagePlayed: data.played * 100\r\n        }, () => console.log(this.state))\r\n        // $(\"#custom-seekbar span\").css(\"width\", percentage+\"%\");\r\n    }\r\n\r\n    onDuration = (data) => {\r\n        console.log('onDuration', data);\r\n    }\r\n\r\n    onBuffer = (data) => {\r\n        console.log('onBuffer', data);\r\n    }\r\n\r\n    onBufferEnd = (data) => {\r\n        console.log('onBufferEnd', data);\r\n    }\r\n    count = 0;\r\n\r\n    handleTimeUpdate = (event) => {\r\n        // console.log('data', event.target)\r\n        let totalDuration = this.pl.current.duration;\r\n        // let noOfFrame = totalDuration / 10;\r\n        // if (this.count <= noOfFrame) {\r\n        //     this.capture();\r\n        //     this.count++;\r\n        // }\r\n        this.capture();\r\n    }\r\n\r\n    capture = () => {\r\n        var canvas = document.getElementById('canvas');\r\n        var video = document.getElementById('video');\r\n        canvas.width = video.videoWidth;\r\n        canvas.height = video.videoHeight;\r\n        canvas.getContext('2d').drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\r\n        console.log('duration', video.duration);\r\n\r\n        canvas.toBlob(this.saveFrame, 'image/jpeg');\r\n       \r\n    }\r\n\r\n        saveFrame = (blob) => {\r\n        this.images.push(blob);\r\n      }\r\n\r\n      revokeURL = (e) =>  {\r\n        URL.revokeObjectURL(this.pl.current.src);\r\n      }\r\n\r\n      onend = (e) => {\r\n        console.log('images', this.images);\r\n        var img;\r\n        // do whatever with the frames\r\n        for (var i = 0; i < this.images.length; i++) {\r\n          img = new Image();\r\n          img.onload = this.revokeURL;\r\n          img.src = URL.createObjectURL(this.images[i]);\r\n          document.body.appendChild(img);\r\n        }\r\n        // we don't need the video's objectURL anymore\r\n        URL.revokeObjectURL(this.src);\r\n      }\r\n\r\n      async extractFramesFromVideo(videoUrl, fps=25) {\r\n          console.log('called')\r\n        return new Promise(async (resolve) => {\r\n      \r\n          // fully download it first (no buffering):\r\n          let videoBlob = await fetch(videoUrl).then(r => r.blob());\r\n          let videoObjectUrl = URL.createObjectURL(videoBlob);\r\n          let video = document.createElement(\"video\");\r\n      \r\n          let seekResolve;\r\n          video.addEventListener('seeked', async function() {\r\n            if(seekResolve) seekResolve();\r\n          });\r\n      \r\n          video.src = videoObjectUrl;\r\n      \r\n          // workaround chromium metadata bug (https://stackoverflow.com/q/38062864/993683)\r\n          while((video.duration === Infinity || isNaN(video.duration)) && video.readyState < 2) {\r\n            await new Promise(r => setTimeout(r, 1000));\r\n            video.currentTime = 10000000*Math.random();\r\n          }\r\n          let duration = video.duration;\r\n      \r\n          let canvas = document.createElement('canvas');\r\n          let context = canvas.getContext('2d');\r\n          let [w, h] = [video.videoWidth, video.videoHeight]\r\n          canvas.width =  w;\r\n          canvas.height = h;\r\n      \r\n          let frames = [];\r\n          let interval = 1 / fps;\r\n          let currentTime = 0;\r\n      \r\n          while(currentTime < duration) {\r\n            video.currentTime = currentTime;\r\n            await new Promise(r => seekResolve=r);\r\n      \r\n            context.drawImage(video, 0, 0, w, h);\r\n            let base64ImageData = canvas.toDataURL();\r\n            frames.push(base64ImageData);\r\n      \r\n            currentTime += interval;\r\n          }\r\n          console.log('frames', frames);\r\n          resolve(frames);\r\n        });\r\n    };\r\n\r\n    extractFrames = (url) => {\r\n        this.extractFramesFromVideo(url)\r\n        .then(data => console.log('data', data))\r\n    }\r\n\r\n\r\n    render() {\r\n            console.log(this.state)\r\n            const loaded = this.state.videoLoaded;\r\n        return (\r\n            <div className=\"player-container\">\r\n                <div className={`drop-container ${loaded && \"left-align\"}`}>\r\n                    <Dropzone onDrop={this.handleDrop}>\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            <div {...getRootProps({ className: \"dropzone\" })}>\r\n                                <input {...getInputProps()} />\r\n                                <p>Drag'n'drop file, or click to select file</p>\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                </div>\r\n                <div className=\"video-player\">\r\n                  {/* {\r\n                      this.state.videoPreviewUrl ?   <ReactPlayer\r\n                      ref = {this.pl}\r\n                      url={this.state.videoPreviewUrl}\r\n                      playing = {true}\r\n                      controls = {true}\r\n                      loop = {true}\r\n                      pip = {true}\r\n                      volume = {1}\r\n                      onSeek = {this.onSeek}\r\n                      onProgress = {this.onProgress}\r\n                      onDuration = {this.onDuration}\r\n                      onBuffer = {this.onBuffer}\r\n                      onBufferEnd = {this.onBufferEnd}\r\n                  /> : null\r\n                  } */}\r\n\r\n                    {\r\n                        this.state.videoPreviewUrl ?\r\n                            <video id=\"video\" width=\"400\" controls ref={this.pl} onTimeUpdate={this.handleTimeUpdate}\r\n                                onEnded={this.onend} onLoadedMetadata={ () => this.extractFrames(this.state.videoPreviewUrl)}>\r\n                                <source src={this.state.videoPreviewUrl} type=\"video/mp4\" />\r\n                            </video> : null\r\n                    }\r\n\r\n                    {/* {\r\n                        this.state.videoPreviewUrl ?\r\n                            <div id=\"custom-seekbar\" className=\"custom-seekbar\" style={{width: this.state.percentagePlayed + \"%\"}}>\r\n                            </div> : null\r\n                    } */}\r\n\r\n                    {\r\n                        this.state.videoPreviewUrl ?\r\n                            <div id=\"custom-seekbar\" className=\"custom-seekbar\">\r\n                            </div>\r\n                        : null\r\n                    }\r\n                    {/* <InputRange\r\n                        maxValue={20}\r\n                        minValue={0}\r\n                        value={this.state.value}\r\n                        onChange={value => this.setState({ value })} /> */}\r\n\r\n                    {/* <button onClick={this.capture}>Capture</button> */}\r\n                    <canvas id=\"canvas\" style={{ overFlow: \"auto\" }}></canvas>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Player;\r\n\r\n\r\n\r\n\r\n\r\n// const Player = (props) => {\r\n\r\n//     const handleTimeUpdate = () => {\r\n//         console.log(\"handleTimeUpdate\");\r\n//     }\r\n\r\n//     const skipSong = () => {\r\n//         console.log(\"skipSong\");\r\n//     }\r\n\r\n//     const VIDEOS = {\r\n//         deer: 'https://s3.amazonaws.com/codecademy-content/courses/React/react_video-fast.mp4',\r\n//         snail: 'https://s3.amazonaws.com/codecademy-content/courses/React/react_video-slow.mp4',\r\n//         cat: 'https://s3.amazonaws.com/codecademy-content/courses/React/react_video-cute.mp4',\r\n//         spider: 'https://s3.amazonaws.com/codecademy-content/courses/React/react_video-eek.mp4'\r\n//       };\r\n\r\n//     return (\r\n//         // <div className=\"player-container\">\r\n//         //     <div className=\"video-control\">\r\n//         //         <p>initial</p>\r\n//         //         <div className=\"track\">\r\n//         //         <input type=\"range\" id=\"volume\" name=\"volume\"\r\n//         //  min=\"0\" max=\"11\" />\r\n                    \r\n//         //             <div className=\"animate-track\" style={{ transform: `translateX(${5}%)` }}></div>\r\n//         //         </div>\r\n//         //         <p>end</p>\r\n//         //     </div>\r\n//         //     <div className=\"player-control\">\r\n//         //         <FontAwesomeIcon icon={faAngleLeft} size=\"2x\"/>\r\n//         //         <FontAwesomeIcon icon={ 5 > 3 ? faPause : faPlay } size=\"2x\" />\r\n//         //         <FontAwesomeIcon icon={ faAngleRight } size=\"2x\" />\r\n//         //     </div>\r\n//         // </div>\r\n//         <div>\r\n//             <video width=\"750\" height=\"500\" controls autoPlay loop >\r\n//       <source src={sample} type=\"video/mp4\"/>\r\n//      </video>\r\n//         </div>\r\n//     )\r\n// }",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":3,"column":8,"nodeType":"46","messageId":"47","endLine":3,"endColumn":14},{"ruleId":"44","severity":1,"message":"48","line":8,"column":21,"nodeType":"46","messageId":"47","endLine":8,"endColumn":31},{"ruleId":"44","severity":1,"message":"49","line":1,"column":17,"nodeType":"46","messageId":"47","endLine":1,"endColumn":25},{"ruleId":"44","severity":1,"message":"50","line":2,"column":10,"nodeType":"46","messageId":"47","endLine":2,"endColumn":25},{"ruleId":"44","severity":1,"message":"51","line":3,"column":10,"nodeType":"46","messageId":"47","endLine":3,"endColumn":16},{"ruleId":"44","severity":1,"message":"52","line":3,"column":18,"nodeType":"46","messageId":"47","endLine":3,"endColumn":25},{"ruleId":"44","severity":1,"message":"53","line":3,"column":27,"nodeType":"46","messageId":"47","endLine":3,"endColumn":38},{"ruleId":"44","severity":1,"message":"54","line":3,"column":40,"nodeType":"46","messageId":"47","endLine":3,"endColumn":52},{"ruleId":"44","severity":1,"message":"55","line":4,"column":8,"nodeType":"46","messageId":"47","endLine":4,"endColumn":19},{"ruleId":"44","severity":1,"message":"56","line":7,"column":8,"nodeType":"46","messageId":"47","endLine":7,"endColumn":18},{"ruleId":"44","severity":1,"message":"57","line":57,"column":13,"nodeType":"46","messageId":"47","endLine":57,"endColumn":23},{"ruleId":"44","severity":1,"message":"58","line":79,"column":13,"nodeType":"46","messageId":"47","endLine":79,"endColumn":26},{"ruleId":"59","severity":1,"message":"60","line":157,"column":31,"nodeType":"61","messageId":"62","endLine":157,"endColumn":49},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'NavBar' is defined but never used.","Identifier","unusedVar","'setVisible' is assigned a value but never used.","'useState' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faPlay' is defined but never used.","'faPause' is defined but never used.","'faAngleLeft' is defined but never used.","'faAngleRight' is defined but never used.","'ReactPlayer' is defined but never used.","'InputRange' is defined but never used.","'percentage' is assigned a value but never used.","'totalDuration' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'seekResolve'.","ArrowFunctionExpression","unsafeRefs","no-global-assign","no-unsafe-negation"]