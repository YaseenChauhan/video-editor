[{"E:\\my-app\\src\\index.js":"1","E:\\my-app\\src\\App.js":"2","E:\\my-app\\src\\reportWebVitals.js":"3","E:\\my-app\\src\\components\\Navbar.js":"4","E:\\my-app\\src\\components\\Player.js":"5","E:\\my-app\\src\\components\\Slider.js":"6","E:\\my-app\\src\\components\\Controls.js":"7","E:\\my-app\\src\\components\\FilePicker.js":"8","E:\\my-app\\src\\components\\Player1.js":"9","E:\\my-app\\src\\components\\Status.js":"10","E:\\my-app\\src\\components\\Trimmer.js":"11","E:\\my-app\\src\\components\\Icon.js":"12","E:\\my-app\\src\\components\\Dragger.js":"13","E:\\my-app\\src\\libs\\WebVideo.js":"14","E:\\my-app\\src\\libs\\preloadWebVideo.js":"15","E:\\my-app\\src\\libs\\utils.js":"16","E:\\my-app\\src\\libs\\formatSeconds.js":"17"},{"size":500,"mtime":499162500000,"results":"18","hashOfConfig":"19"},{"size":6148,"mtime":1611145977811,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":552,"mtime":1610955136256,"results":"22","hashOfConfig":"19"},{"size":10847,"mtime":1610965177859,"results":"23","hashOfConfig":"19"},{"size":4001,"mtime":1610955446096,"results":"24","hashOfConfig":"19"},{"size":1134,"mtime":1610965554860,"results":"25","hashOfConfig":"19"},{"size":1976,"mtime":1611125536510,"results":"26","hashOfConfig":"19"},{"size":3091,"mtime":1611124511910,"results":"27","hashOfConfig":"19"},{"size":152,"mtime":1610966079618,"results":"28","hashOfConfig":"19"},{"size":5999,"mtime":1611145050389,"results":"29","hashOfConfig":"19"},{"size":2847,"mtime":1610965555160,"results":"30","hashOfConfig":"19"},{"size":1499,"mtime":1610965554975,"results":"31","hashOfConfig":"19"},{"size":5629,"mtime":1611146311179,"results":"32","hashOfConfig":"19"},{"size":89,"mtime":1610966146208,"results":"33","hashOfConfig":"19"},{"size":1879,"mtime":1610966146222,"results":"34","hashOfConfig":"19"},{"size":3537,"mtime":1610966146192,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"n8wuj3",{"filePath":"39","messages":"40","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"38"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"81","usedDeprecatedRules":"38"},"E:\\my-app\\src\\index.js",[],["82","83"],"E:\\my-app\\src\\App.js",["84","85","86","87","88","89","90","91"],"import './App.css';\nimport './styles/app.scss'\n// import NavBar from './components/Navbar';\n// import Player from './components/Player1';\nimport { useState } from 'react';\n\n\nimport React from \"react\";\nimport FilePicker from \"./components/FilePicker\";\nimport Status from \"./components/Status\";\nimport Player from \"./components/Player1\";\nimport Controls from \"./components/Controls\";\nimport Trimmer from \"./components/Trimmer\";\nimport WebVideo from \"./libs/WebVideo\";\nimport webVideoLoader from \"./libs/preloadWebVideo\";\nimport Icon from \"./components/Icon\";\nimport { noop, arrayBufferToBlob, readBlobURL, download } from \"./libs/utils\";\nimport PropTypes from \"prop-types\";\n\nclass ReactVideoTrimmer extends React.PureComponent {\n  /**\n   * @type {WebVideo}\n   */\n  webVideo = webVideoLoader({});\n\n  static propTypes = {\n    onVideoEncode: PropTypes.func,\n    showEncodeBtn: PropTypes.bool,\n    timeLimit: PropTypes.number,\n    loadingFFMPEGText: PropTypes.string\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  defaultState = {\n    decoding: false,\n    encoding: false,\n    encoded: false,\n    playVideo: false,\n    videoDataURL: \"\",\n    videoFrames: [],\n    isDecoding: false,\n    timeRange: { start: 1, end: this.props.timeLimit || 5000 },\n    encodedVideo: null,\n    playedSeconds: 0\n  };\n\n  state = this.defaultState;\n\n  updateVideoDataURL = dataURL => this.setState({ videoDataURL: dataURL });\n\n  updateVideoFrames = frames => this.setState({ videoFrames: frames });\n\n  updateIsDecoding = state => this.setState({ updateIsDecoding: state });\n\n\n  decodeVideoFile = (file, doneCB = noop) => {\n    // console.log('decoding', file)\n    this.setState({ decoding: true });\n    const webVideo = this.webVideo;\n    webVideo.videoFile = file;\n    webVideo\n      .decode(file)\n      .then(({ blob, arrayBuffer, dataURL }) => {\n        this.updateVideoDataURL(dataURL);\n        // console.log(\"data\", this.webVideo.videoData)\n        const timeRangeStart = this.state.timeRange.start;\n        const duration = this.webVideo.videoData.duration;\n        const timeLimit = timeRangeStart + (this.props.timeLimit || 5000);\n        const timeRangeEnd = duration > timeLimit ? timeLimit : duration;\n        // console.log('timeRangeStart', timeRangeStart)\n        // console.log('duration', duration)\n        // console.log('timeLimit', timeLimit)\n        // console.log('timeRangeEnd', timeRangeEnd)\n        this.setState({\n          timeRange: { start: timeRangeStart, end: timeRangeEnd },\n          playedSeconds: (timeRangeEnd - timeRangeStart) / 2 + timeRangeStart\n        });\n        this.setState({ decoding: false });\n        doneCB();\n      })\n      .catch(e => console.log(e));\n  };\n  handleFileSelected = file => {\n    this.decodeVideoFile(file);\n  };\n\n  handleVideoTrim = time => {\n    // console.log('handlevideotrim', time);\n    this.setState({ timeRange: time });\n  };\n  \n  handleEncodeVideo = timeRange => {\n    // console.log('handleEncodeVideo', timeRange);\n    this.setState({ encoding: true, videoDataURL: \"\", playVideo: false });\n    const timeDifference = timeRange.end - timeRange.start;\n    // console.log(timeRange);\n    this.webVideo.trimVideo(timeRange.start, timeDifference);\n  };\n  handlePlayPauseVideo = () => {\n    const { playVideo } = this.state;\n    this.setState({ playVideo: !playVideo });\n  };\n  handlePlayerPause = () => {\n    // console.log(\"pause video\");\n    this.setState({ playVideo: false });\n  };\n  handlePlayerPlay = () => {\n    this.setState({ playVideo: true });\n  };\n  handlePlayerProgress = seconds => {\n    if (this.state.playVideo) {\n      this.setState({ playedSeconds: seconds });\n    }\n  };\n  handleReselectFile = () => {\n    this.setState({\n      ...this.defaultState,\n    });\n  };\n  VideoPlayerWithTrimmer = ({ showTrimmer }) => {\n    const { encoding, videoDataURL } = this.state;\n    return (\n      <>\n        {(\n          <Player\n            src={this.state.videoDataURL}\n            timeRange={this.state.timeRange}\n            timeLimit={this.props.timeLimit}\n            playVideo={this.state.playVideo}\n            onPlayerPlay={this.handlePlayerPlay}\n            onPlayerPause={this.handlePlayerPause}\n            onPlayerProgress={this.handlePlayerProgress}\n          />\n        )}\n        {showTrimmer && (\n          <Trimmer\n            onPausePlayer={this.handlePlayerPause}\n            showTrimmer={this.state.videoDataURL}\n            duration={this.webVideo.videoData.duration}\n            onTrim={this.handleVideoTrim}\n            timeLimit={this.props.timeLimit}\n            timeRangeLimit={this.props.timeRange}\n            timeRange={this.state.timeRange}\n            currentTime={this.state.playedSeconds}\n          />\n        )}\n\n        {videoDataURL && (\n          <Controls\n            onDownload={() => this.handleDownloadVideo(this.state.encodedVideo)}\n            showEncodeBtn={this.props.showEncodeBtn}\n            onReselectFile={this.handleReselectFile}\n            onEncode={() => this.handleEncodeVideo(this.state.timeRange)}\n            onPlayPauseClick={this.handlePlayPauseVideo}\n            processing={encoding}\n            playing={this.state.playVideo}\n          />\n        )}\n      </>\n    );\n  };\n\n  render() {\n    const {\n      videoDataURL\n    } = this.state;\n    return (\n      <div className=\"rvt-main-container\">\n        { (\n          <>\n            {!videoDataURL && (\n              <FilePicker\n                onFileSelected={this.handleFileSelected}\n                minSize={this.props.minSize}\n                maxSize={this.props.maxSize}\n              />\n            )}\n            {\n              videoDataURL && <this.VideoPlayerWithTrimmer showTrimmer={true} />\n            }\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport const preloadWebVideo = webVideoLoader;\n\nexport default ReactVideoTrimmer;\n\n\n\n\n\n// function App() {\n//   const [isVisible, setVisible] = useState(false);\n//   return (\n//     <div className={`App ${isVisible && `app-push`}`}>\n//       <header className=\"App-header\">\n//        {/* <NavBar /> */}\n//        Video Editor\n//       </header>\n//       <Player />\n//     </div>\n//   );\n// }\n\n// export default App;\n","E:\\my-app\\src\\reportWebVitals.js",[],"E:\\my-app\\src\\components\\Navbar.js",[],["92","93"],"E:\\my-app\\src\\components\\Player.js",["94","95","96","97","98","99","100","101","102","103","104","105","106"],"E:\\my-app\\src\\components\\Slider.js",["107","108","109"],"import React from 'react';\r\nclass Slider extends React.Component {\r\n    state = {\r\n      slots: 24,\r\n      start: 0,\r\n      end: 10,\r\n      labelMode: \"mid\",   // mid, long\r\n    }\r\n    \r\n    onDragOver = (e) => {\r\n      e.preventDefault();\r\n    }\r\n    \r\n    onDragStart = (e) => {\r\n      let slider  = e.target.dataset.slider;\r\n      this.sliderType = slider;\r\n      //e.dataTransfer.setData(\"text/plain\", slider)\r\n    }\r\n    \r\n    onDrag = (e) => {\r\n    }\r\n    \r\n    \r\n    onDrop = (e, target) => {\r\n      //let source = e.dataTransfer.getData(\"text/plain\");\r\n      \r\n      let source = this.sliderType;\r\n      let slot = Number(e.target.dataset.slot);\r\n      \r\n      if (isNaN(slot)) return;\r\n      \r\n      if (source === \"min\") {\r\n        if (slot >= this.state.end) return;\r\n        this.setState({\r\n          start: slot\r\n        })\r\n      } else if (source === \"max\") {\r\n        if (slot <= this.state.start) return;\r\n        this.setState({\r\n          end: slot\r\n        })\r\n      }\r\n      this.sliderType = null;\r\n    }\r\n    \r\n    MinSlider=()=> {\r\n      return (\r\n        <div data-slider=\"min\" \r\n            onDragStart={this.onDragStart} \r\n            onTouchStart={this.onDragStart}\r\n            onDrag = {this.onDrag}\r\n            draggable className=\"slider-thumb slider-thumb-min\">\r\n        </div>\r\n      );\r\n    }\r\n\r\n    MaxSlider=()=> {\r\n      return (\r\n        <div data-slider=\"max\" \r\n            onDragStart={this.onDragStart}  \r\n            onTouchStart={this.onDragStart}\r\n            onDrag={this.onDrag}\r\n            draggable className=\"slider-thumb slider-thumb-max\"></div>\r\n      );\r\n    }\r\n   \r\n    render() {\r\n      let scale = [];\r\n      let slider=[];\r\n      let currentScale = [];\r\n      let minThumb = null;\r\n      let maxThumb = null\r\n      \r\n      \r\n      for (let i = 0; i <= this.state.slots;i++) {\r\n        let label = \"\";\r\n        \r\n        if (i == 0 || i == 12 || i == 24) {\r\n          label = i;\r\n        }\r\n        \r\n        \r\n        scale.push(\r\n          <div \r\n            key={i} \r\n            className=\"slot-scale\">\r\n            {label}\r\n          </div>\r\n        );\r\n      \r\n        let currentLabel = \"\";\r\n        \r\n        if (i === this.state.start || i === this.state.end) {\r\n          currentLabel = i;\r\n        }\r\n        \r\n        currentScale.push(\r\n          <div \r\n            \r\n            key={i} \r\n            className=\"slot-scale\">\r\n            {currentLabel}\r\n          </div>\r\n        );\r\n        \r\n        if (i === this.state.start) {\r\n          minThumb = <this.MinSlider />\r\n        } else if (i === this.state.end) {\r\n          maxThumb = <this.MaxSlider />\r\n        } else {\r\n          minThumb = null;\r\n          maxThumb = null;\r\n        }\r\n          \r\n          \r\n        let lineClass = \"line\";\r\n        \r\n        if (i > this.state.start && i < this.state.end) {\r\n           lineClass += \" line-selected\";\r\n        }\r\n        slider.push(\r\n          <div \r\n            data-slot={i}\r\n            onDragOver={this.onDragOver} \r\n            onTouchMove = {this.onDragOver}\r\n            onTouchEnd = {this.onDrop}\r\n            onDrop = {this.onDrop}\r\n            key={i} \r\n            className=\"slot\">\r\n              <div  data-slot={i} className={lineClass}/>\r\n              <span className=\"scale-mark\"></span>\r\n              {minThumb}\r\n              {maxThumb}\r\n          </div>\r\n        );\r\n      }\r\n     \r\n      return (\r\n        <div>\r\n          <h2>React Slider</h2>\r\n          \r\n          <div className=\"example-1\">\r\n            <div className=\"slider-container\">\r\n             \r\n             <div className=\"slider-scale\">\r\n                 {scale}\r\n              </div>\r\n        \r\n              <div className=\"slider\">\r\n                  {slider}\r\n              </div>\r\n             \r\n              <div className=\"slider-selected-scale\">\r\n                  {currentScale}\r\n              </div>\r\n             \r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Slider;\r\n","E:\\my-app\\src\\components\\Controls.js",["110","111","112","113"],"import React from \"react\";\r\nimport Icon from \"./Icon\";\r\n\r\nconst Controls = ({\r\n  onPlayPauseClick,\r\n  playing,\r\n  onReselectFile,\r\n  processing,\r\n  onEncode,\r\n  showEncodeBtn,\r\n  canDownload,\r\n  onDownload\r\n}) => {\r\n  return (\r\n    <div className=\"rvt-controls-cont\">\r\n      <a\r\n        className=\"rvt-controller-item\"\r\n        title=\"Pause\"\r\n        onClick={onPlayPauseClick}\r\n      >\r\n        <Icon name={playing ? \"pause\" : \"play\"} />\r\n      </a>\r\n\r\n      <a\r\n        className=\"rvt-controller-item\"\r\n        title=\"Select File\"\r\n        onClick={onReselectFile}\r\n      >\r\n        <Icon name=\"music\" />\r\n      </a>\r\n      {showEncodeBtn && (\r\n        <div className=\"rvt-controller-dropdown rvt-controller-list-wrap\">\r\n          {canDownload ? (\r\n            <a className=\"rvt-controller-item\" onClick={onDownload}>\r\n              <Icon name=\"download\" />\r\n            </a>\r\n          ) : (\r\n            <a className=\"rvt-controller-item\" onClick={onEncode}>\r\n              <Icon name={processing ? \"spin\" : \"replay\"} />\r\n            </a>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Controls;\r\n","E:\\my-app\\src\\components\\FilePicker.js",["114","115","116","117","118"],"import React, { useCallback, useRef } from \"react\";\r\nimport { isVideo, noop } from \"../libs/utils\";\r\nimport Icon from \"./Icon\";\r\nimport Dropzone from \"react-dropzone\";\r\n\r\nfunction FilePicker(props) {\r\n  const onDrop = useCallback(acceptedFiles => {\r\n\r\n    if (acceptedFiles.length) {\r\n      const video = acceptedFiles[0];\r\n      const handler = props.onFileSelected || noop;\r\n      handler(video);\r\n    }\r\n  }, []);\r\n  const MAX_SIZE = props.maxSize || 50000024;\r\n  const MIN_SIZE = props.minSize || 0;\r\n  // const handleFileChange = useCallback(e => {\r\n  //   if (e.target.files.length) {\r\n  //     const video = e.target.files[0];\r\n  //     if (isVideo(video)) {\r\n  //       const handler = props.onFileSelected || noop;\r\n  //       handler(video);\r\n  //     } else {\r\n  //       return alert(\"Unsupported File Type\");\r\n  //     }\r\n  //   }\r\n  // });\r\n  const toMB = byte => Math.round(byte / 1000000);\r\n  return (\r\n    <div className=\"drop-container\">\r\n      <Dropzone\r\n      onDrop={onDrop}\r\n      maxSize={MAX_SIZE}\r\n      minSize={MIN_SIZE}\r\n      accept=\"video/*\"\r\n    >\r\n      {({ getRootProps, getInputProps }) => (\r\n        <div {...getRootProps({ className: \"dropzone\" })}>\r\n          <input {...getInputProps()} />\r\n          <p>Drag and drop file or click to select file</p>\r\n        </div>\r\n      )}\r\n      {/* {({ getRootProps, getInputProps, isDragActive }) => (\r\n        <div {...getRootProps()} className=\"rvt-file-picker\">\r\n          <Icon name=\"music\" />\r\n          <input {...getInputProps()} />\r\n          {isDragActive ? (\r\n            <p>Drop the video here ...</p>\r\n          ) : (\r\n            <>\r\n              <p>Drag 'n' drop a video here, or click to select one</p>\r\n              <p>\r\n                <small>\r\n                  ({toMB(MIN_SIZE)} - {toMB(MAX_SIZE)}MB)\r\n                </small>\r\n              </p>\r\n            </>\r\n          )}\r\n        </div>\r\n      )} */}\r\n    </Dropzone>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilePicker;\r\n","E:\\my-app\\src\\components\\Player1.js",["119","120","121"],"import React from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { formatSeconds, noop, leftZero } from \"../libs/utils\";\r\n\r\nclass Player extends React.Component {\r\n  state = {\r\n    playing: this.props.playVideo || false\r\n  };\r\n  componentWillReceiveProps(newProps) {\r\n    const newTimeRange = newProps.timeRange;\r\n    const oldTimeRange = this.props.timeRange;\r\n    // console.log('old', this.props)\r\n    // console.log('new', newProps)\r\n    const canSeek =\r\n      (oldTimeRange && newTimeRange.start !== oldTimeRange.start) ||\r\n      (!oldTimeRange && newTimeRange.start > 0);\r\n    if (canSeek) {\r\n      this.setState({ playing: false });\r\n      this.player.seekTo(newTimeRange.start, \"seconds\");\r\n    }\r\n    if (newProps.playVideo !== this.props.playVideo) {\r\n      this.setState({ playing: newProps.playVideo });\r\n    }\r\n  }\r\n  handlePlayerProgress = data => {\r\n    // console.log(\"handlePlayerProgress\", data);\r\n    if (data.loaded) {\r\n      const { playedSeconds } = data;\r\n      const startTimeRange = this.props.timeRange.start;\r\n      const endTimeRange = this.props.timeRange.end;\r\n      const playedSecondsIsLowerThanStartTime = playedSeconds <= startTimeRange;\r\n      const playedSecondsIsGreaterThanEndTime = playedSeconds >= endTimeRange;\r\n      if (playedSecondsIsLowerThanStartTime) {\r\n        this.player.seekTo(startTimeRange, \"seconds\");\r\n      }\r\n      if (playedSecondsIsGreaterThanEndTime) {\r\n        this.player.seekTo(startTimeRange, \"seconds\");\r\n        // this.setState({ playing: false });\r\n      }\r\n      const handler = this.props.onPlayerProgress || noop;\r\n      handler(playedSeconds);\r\n    }\r\n  };\r\n  displaySeconds(seconds = 5) {\r\n    return seconds.toFixed(2) + \"s\";\r\n  }\r\n  handleOnPause = () => {\r\n    const handler = this.props.onPlayerPause || noop;\r\n    handler();\r\n  };\r\n  handleOnPlay = () => {\r\n    const handler = this.props.onPlayerPlay || noop;\r\n    handler();\r\n  };\r\n  render() {\r\n    // console.log('timeRange', this.props.timeRange);\r\n    const { start, end } = this.props.timeRange;\r\n    return (\r\n      <div className=\"rvt-player-cont\" onContextMenu={() => {}}>\r\n        <ReactPlayer\r\n          onPlay={this.handleOnPause}\r\n          onPlay={this.handleOnPlay}\r\n          onProgress={this.handlePlayerProgress}\r\n          url={this.props.src}\r\n          ref={el => (this.player = el)}\r\n          playing={this.state.playing}\r\n          style={{\r\n            margin: \"0 auto\"\r\n          }}\r\n        />\r\n        <div className=\"rvt-player-time-range-cont\">\r\n          <span className=\"rvt-player-time-range\">\r\n            From: <strong>{this.displaySeconds(start)}</strong>\r\n          </span>\r\n          <span className=\"rvt-player-time-range\">\r\n            To: <strong>{this.displaySeconds(end)}</strong>\r\n          </span>\r\n          <span className=\"rvt-player-time-range\">\r\n            Selected <strong>{this.displaySeconds(end - start)}</strong> of{\" \"}\r\n            <strong>{this.displaySeconds(this.props.timeLimit)}</strong> allowed\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Player;\r\n","E:\\my-app\\src\\components\\Status.js",[],"E:\\my-app\\src\\components\\Trimmer.js",["122"],"import React, { PureComponent } from \"react\";\r\nimport Dragger from \"./Dragger\";\r\nimport { noop, formatSeconds, leftZero } from \"../libs/utils\";\r\n\r\nconst TrimmerOverLay = props => {\r\n  return (\r\n    <div\r\n      className=\"rvt-trimmer\"\r\n      style={{ width: props.width, left: props.left, right: props.right }}\r\n    />\r\n  );\r\n};\r\n\r\nconst TimeStamp = props => {\r\n  const formated = formatSeconds(props.time);\r\n  return (\r\n    <div className=\"rvt-player-cursor-current\">\r\n      <span className=\"rvt-player-num\">{formated[0]}</span>'\r\n      <span className=\"rvt-player-num\">{formated[1]}</span>\r\n      {!props.noMicroSeconds && (\r\n        <>\r\n          .<span className=\"rvt-player-num\">{leftZero(formated[2], 2)}</span>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nclass Trimmer extends PureComponent {\r\n  pos2Time = pos => {\r\n    return pos / this.props.widthDurationRatio;\r\n  };\r\n\r\n  time2pos = time => {\r\n    return time * this.props.widthDurationRatio;\r\n  };\r\n\r\n  keepInRange = x => {\r\n    const containerWidth = this.props.containerWidth;\r\n    if (x < 0) {\r\n      return 0;\r\n    }\r\n\r\n    if (x > containerWidth) {\r\n      return containerWidth;\r\n    }\r\n\r\n    return x;\r\n  };\r\n\r\n  withinTimeLimit = (time, isDragEnd = true) => {\r\n    const timeLimit = this.props.timeLimit;\r\n\r\n    let startTime = this.props.startTime;\r\n    let endTime = time;\r\n\r\n    if (!isDragEnd) {\r\n      startTime = time;\r\n      endTime = this.props.endTime;\r\n    }\r\n\r\n    const duration = this.props.duration;\r\n    let timeTillEnd = duration - endTime;\r\n\r\n    const currentRange = duration - startTime - timeTillEnd;\r\n    return timeLimit ? currentRange <= timeLimit : true;\r\n  };\r\n\r\n  withinTimeRange = (time, isDragEnd = true) => {\r\n    const timeRange = this.props.timeRangeLimit;\r\n    let interval = time - this.props.startTime;\r\n    if (!isDragEnd) {\r\n      interval = this.props.endTime - time;\r\n    }\r\n    return timeRange ? interval >= timeRange : true;\r\n  };\r\n\r\n  handleDragStart = pos => {\r\n    const pos2Time = this.pos2Time(this.keepInRange(pos.x));\r\n    let time = pos2Time;\r\n\r\n    const currentTime = this.props.currentTime;\r\n    const currentTimeIsWithinRange = this.withinTimeRange(time, false);\r\n    const currentTimeIsWithinLimit = this.withinTimeLimit(time, false);\r\n\r\n    if (\r\n      time >= currentTime ||\r\n      !currentTimeIsWithinRange ||\r\n      !currentTimeIsWithinLimit\r\n    ) {\r\n      time = this.props.startTime;\r\n      const handler = this.props.onPausePlayer || (() => {});\r\n      handler();\r\n    }\r\n    this.props.onStartTimeChange(time);\r\n  };\r\n  handleDragEnd = pos => {\r\n    const pos2Time = this.pos2Time(this.keepInRange(pos.x));\r\n    let time = pos2Time;\r\n\r\n    const endTime = this.props.endTime;\r\n    const currentTime = this.props.currentTime;\r\n\r\n    const currentTimeIsWithinRange = this.withinTimeRange(time);\r\n    const currentTimeIsWithinLimit = this.withinTimeLimit(time);\r\n\r\n    if (\r\n      currentTime >= time ||\r\n      !currentTimeIsWithinRange ||\r\n      !currentTimeIsWithinLimit\r\n    ) {\r\n      time = this.props.endTime;\r\n      const handler = this.props.onPausePlayer || (() => {});\r\n      handler();\r\n    }\r\n\r\n    this.props.onEndTimeChange(time);\r\n  };\r\n  handleDragStop = () => {\r\n    const handler = this.props.onGetData || noop;\r\n    handler({ start: this.props.startTime, end: this.props.endTime });\r\n  };\r\n  getTrimmerWidth = width => {\r\n    return this.props.containerWidth - width;\r\n  };\r\n  render() {\r\n    const start = this.time2pos(this.props.startTime);\r\n    const end = this.time2pos(this.props.endTime);\r\n    const current = this.time2pos(this.props.currentTime);\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <TrimmerOverLay left={0} width={start} />\r\n        <Dragger\r\n          x={start}\r\n          onDrag={this.handleDragStart}\r\n          onDragStop={this.handleDragStop}\r\n        >\r\n          <TimeStamp time={this.props.startTime} />\r\n        </Dragger>\r\n        <Dragger x={current} onDrag={() => {}} onDragStop={() => {}}>\r\n          <TimeStamp noMicroSeconds time={this.props.currentTime} />\r\n        </Dragger>\r\n        <Dragger\r\n          x={end}\r\n          onDrag={this.handleDragEnd}\r\n          onDragStop={this.handleDragStop}\r\n        >\r\n          <TimeStamp time={this.props.endTime} />\r\n        </Dragger>\r\n        <TrimmerOverLay right={0} width={this.getTrimmerWidth(end)} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport class VideoTrimmer extends PureComponent {\r\n  state = {\r\n    start: 0,\r\n    end: 0\r\n  };\r\n  get widthDurationRatio() {\r\n    return this.containerWidth / this.props.duration;\r\n  }\r\n  get containerWidth() {\r\n    return this.containerRef && this.containerRef.getBoundingClientRect().width;\r\n  }\r\n\r\n  handleStartTimeChange = time => {\r\n    this.setState({ start: time });\r\n  };\r\n  handleGetTrimData = () => {\r\n    const trimmerHandler = this.props.onTrim || noop;\r\n    setTimeout(\r\n      () =>\r\n        trimmerHandler({\r\n          start: this.state.start || this.props.timeRange.start,\r\n          end: this.state.end || this.props.timeRange.end\r\n        }),\r\n      200\r\n    );\r\n  };\r\n  handleEndTimeChange = time => {\r\n    this.setState({ end: time });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"rvt-trimmer-cont\" ref={e => (this.containerRef = e)}>\r\n        {this.props.showTrimmer && (\r\n          <Trimmer\r\n            timeLimit={this.props.timeLimit}\r\n            onStartTimeChange={this.handleStartTimeChange}\r\n            onEndTimeChange={this.handleEndTimeChange}\r\n            widthDurationRatio={this.widthDurationRatio}\r\n            containerWidth={this.containerWidth}\r\n            startTime={this.state.start || this.props.timeRange.start}\r\n            endTime={this.state.end || this.props.timeRange.end}\r\n            currentTime={this.props.currentTime}\r\n            duration={this.props.duration}\r\n            onGetData={this.handleGetTrimData}\r\n            onPausePlayer={this.onPausePlayer}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VideoTrimmer;\r\n","E:\\my-app\\src\\components\\Icon.js",[],"E:\\my-app\\src\\components\\Dragger.js",[],["123","124"],"E:\\my-app\\src\\libs\\WebVideo.js",["125","126","127"],"import { EventEmitter } from \"events\";\r\nimport { readDataURL, arrayBufferToBlob, readArrayBuffer } from \"./utils\";\r\nimport workerClient from \"ffmpeg-webworker\";\r\nimport { fromS } from \"./formatSeconds\";\r\n\r\nclass WebVideo {\r\n  constructor(videoFile) {\r\n    this.videoFile = videoFile;\r\n    this.workerClient = workerClient;\r\n\r\n    // workerClient.on(\"onReady\", () => this.emit(\"FFMPEGReady\"));\r\n    // workerClient.on(\"onStdout\", msg => this.emit(\"FFMPEGStdout\", msg));\r\n    // workerClient.on(\"onFileReceived\", () => this.emit(\"FFMPEGFileReceived\"));\r\n    // workerClient.on(\"onDone\", this.handleDoneClientDone);\r\n  }\r\n  handleDoneClientDone = result => {\r\n    // // console.log(result);\r\n    // // if (!this.optimizedVideo) {\r\n    // //   this.optimizedVideo = true;\r\n    // //   const converted = arrayBufferToBlob(result[0].data);\r\n    // //   // console.log(converted);\r\n    // //   workerClient.inputFile = converted;\r\n    // //   setTimeout(this.optimizeVideo, 500);\r\n    // // } else {\r\n    // const converted = arrayBufferToBlob(result[0].data);\r\n    // this.emit(\"FFMPEGDone\", result);\r\n    // // }\r\n  };\r\n  // trimVideo = (start = 0, length) => {\r\n  //   console.log('trimming', workerClient)\r\n  //   const startSeconds = fromS(start, \"hh:mm:ss\");\r\n  //   workerClient.runCommand(\r\n  //     `-ss ${startSeconds} -c copy -t ${length} sliced-output.mp4`\r\n  //   );\r\n  // };\r\n\r\n  // optimizeVideo = () => {\r\n  //   workerClient.runCommand(\r\n  //     `-strict -2 -vcodec libx264 -crf 23 output.mp4`,\r\n  //     253554432\r\n  //   );\r\n  // };\r\n  _videoData = {};\r\n  _videoFile = null;\r\n  optimizedVideo = false;\r\n  /**\r\n   * @type {ArrayBuffer}\r\n   */\r\n  _videoBuffer = {};\r\n\r\n  readAsArrayBuffer = async () => {\r\n    this._videoBuffer = await readArrayBuffer(this._videoFile);\r\n    return this.videoBuffer;\r\n  };\r\n\r\n  /**\r\n   * @returns {Blob}\r\n   * @returns {String}\r\n   */\r\n  convertBufferToBlob = buffer => {\r\n    let blob = null;\r\n    buffer = buffer || this.videoBuffer;\r\n    if (buffer.byteLength) {\r\n      blob = arrayBufferToBlob(buffer);\r\n    }\r\n    console.log('blob', blob);\r\n    return blob;\r\n  };\r\n\r\n  /**\r\n   * @returns {File}\r\n   */\r\n  readAsDataURL = async (buffer, blob) => {\r\n    buffer = buffer || this.videoBuffer;\r\n    blob = blob || this.convertBufferToBlob(buffer);\r\n    let dataURL = null;\r\n    if (blob) {\r\n      dataURL = await readDataURL(blob);\r\n    }\r\n    return dataURL;\r\n  };\r\n\r\n  set videoFile(file) {\r\n    if (file && file.type) {\r\n      workerClient.inputFile = file;\r\n    }\r\n    this._videoFile = file;\r\n  }\r\n\r\n  get videoFile() {\r\n    return this._videoFile;\r\n  }\r\n\r\n  get duration() {\r\n    return this._videoData.duration || 0;\r\n  }\r\n\r\n  get videoData() {\r\n    return this._videoData;\r\n  }\r\n  get videoBuffer() {\r\n    return this._videoBuffer;\r\n  }\r\n\r\n  decode = async file => {\r\n    this.videoFile = file;\r\n    // this.emit(\"processingFile\");\r\n    // Read File As ArrayBuffer\r\n    const arrayBuffer = await this.readAsArrayBuffer();\r\n    console.log('arrrayBuffer', arrayBuffer);\r\n    // convert to dataURL\r\n    const dataURL = await this.readAsDataURL(arrayBuffer);\r\n\r\n    let videoObjectUrl = URL.createObjectURL(this.videoFile);\r\n\r\n    console.log('dataUrl', dataURL);\r\n    console.log('videoObjectUrl', videoObjectUrl);\r\n    let video = document.createElement(\"video\");\r\n    video.src = videoObjectUrl;\r\n    console.log('video', video);\r\n    console.log('satte', video.readyState);\r\n    while (\r\n      (video.duration === Infinity || isNaN(video.duration)) &&\r\n      video.readyState < 2\r\n    ) {\r\n      await new Promise(r => setTimeout(r, 1000));\r\n      video.currentTime = 10000000 * Math.random();\r\n    }\r\n    this._videoData = video;\r\n    // this.emit(\"processedFile\");\r\n    return { dataURL, arrayBuffer, blob: this.convertBufferToBlob() };\r\n  };\r\n\r\n  generateBufferChunks = (arrayBuffer = []) => {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        let chunks = [];\r\n        arrayBuffer = arrayBuffer.byteLength ? arrayBuffer : this.videoBuffer;\r\n        const typedBuffer = new Uint8Array(arrayBuffer);\r\n        const microSec = 1000 * 60;\r\n        let startChunk = 0;\r\n        for (let i = microSec; i < typedBuffer.byteLength; i += microSec) {\r\n          const _buffer = arrayBuffer.slice(startChunk, i);\r\n          chunks.push(_buffer);\r\n          startChunk = i;\r\n        }\r\n        resolve(chunks);\r\n      } catch (e) {\r\n        reject(e);\r\n      }\r\n    });\r\n  };\r\n\r\n  \r\n  extractFramesFromVideo = (fps = 25) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        this.emit(\"extractingFrames\");\r\n        let video = this._videoData;\r\n        let seekResolve;\r\n        video.addEventListener(\"seeked\", async function() {\r\n          if (seekResolve) seekResolve();\r\n        });\r\n        let duration = video.duration;\r\n\r\n        let canvas = document.createElement(\"canvas\");\r\n        let context = canvas.getContext(\"2d\");\r\n        let [w, h] = [video.videoWidth, video.videoHeight];\r\n        canvas.width = w;\r\n        canvas.height = h;\r\n        let frames = [];\r\n        let interval = 125 / fps;\r\n        let currentTime = 0;\r\n\r\n        while (currentTime < duration) {\r\n          video.currentTime = currentTime;\r\n          await new Promise(r => (seekResolve = r));\r\n\r\n          context.drawImage(video, 0, 0, w, h);\r\n          let base64ImageData = canvas.toDataURL();\r\n          frames.push(base64ImageData);\r\n\r\n          currentTime += interval;\r\n        }\r\n        this.emit(\"extractedFrames\");\r\n        resolve(frames);\r\n      } catch (e) {\r\n        reject(e);\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nexport default WebVideo;\r\n","E:\\my-app\\src\\libs\\preloadWebVideo.js",["128"],"import WebVideo from \"./WebVideo\";\r\n\r\nexport default (opts = {}) => new WebVideo(opts);\r\n","E:\\my-app\\src\\libs\\utils.js",[],"E:\\my-app\\src\\libs\\formatSeconds.js",["129"],"\"use strict\";\r\nimport zeroFill from \"zero-fill\";\r\n\r\n/**\r\n * Original from https://www.npmjs.com/package/hh-mm-ss\r\n */\r\n\r\n// Time units with their corresponding values in miliseconds\r\nconst HOUR = 3600000;\r\nconst MINUTE = 60000;\r\nconst SECOND = 1000;\r\n\r\nconst TIME_FORMAT_ERRMSG = \"Time format error\";\r\n\r\n// =============================================================================\r\n// Export functions\r\n// =============================================================================\r\n\r\nexport function fromMs(ms, format = \"mm:ss\") {\r\n  if (typeof ms !== \"number\" || Number.isNaN(ms)) {\r\n    throw new Error(\"NaN error\");\r\n  }\r\n\r\n  let absMs = Math.abs(ms);\r\n\r\n  let negative = ms < 0;\r\n  let hours = Math.floor(absMs / HOUR);\r\n  let minutes = Math.floor((absMs % HOUR) / MINUTE);\r\n  let seconds = Math.floor((absMs % MINUTE) / SECOND);\r\n  let miliseconds = Math.floor(absMs % SECOND);\r\n\r\n  return formatTime(\r\n    {\r\n      negative,\r\n      hours,\r\n      minutes,\r\n      seconds,\r\n      miliseconds\r\n    },\r\n    format\r\n  );\r\n}\r\n\r\nexport function fromS(s, format = \"mm:ss\") {\r\n  if (typeof s !== \"number\" || Number.isNaN(s)) {\r\n    throw new Error(\"NaN error\");\r\n  }\r\n\r\n  let ms = s * SECOND;\r\n\r\n  return fromMs(ms, format);\r\n}\r\n\r\nexport function toMs(time, format = \"mm:ss\") {\r\n  let re;\r\n\r\n  if ([\"mm:ss\", \"mm:ss.sss\", \"hh:mm:ss\", \"hh:mm:ss.sss\"].includes(format)) {\r\n    re = /^(-)?(?:(\\d\\d+):)?(\\d\\d):(\\d\\d)(\\.\\d+)?$/;\r\n  } else if (format === \"hh:mm\") {\r\n    re = /^(-)?(\\d\\d):(\\d\\d)(?::(\\d\\d)(?:(\\.\\d+))?)?$/;\r\n  } else {\r\n    throw new Error(TIME_FORMAT_ERRMSG);\r\n  }\r\n\r\n  let result = re.exec(time);\r\n  if (!result) throw new Error();\r\n\r\n  let negative = result[1] === \"-\";\r\n  let hours = result[2] | 0;\r\n  let minutes = result[3] | 0;\r\n  let seconds = result[4] | 0;\r\n  let miliseconds = Math.floor((1000 * result[5]) | 0);\r\n\r\n  if (minutes > 60 || seconds > 60) {\r\n    throw new Error();\r\n  }\r\n\r\n  return (\r\n    (negative ? -1 : 1) *\r\n    (hours * HOUR + minutes * MINUTE + seconds * SECOND + miliseconds)\r\n  );\r\n}\r\n\r\nexport function toS(time, format = \"mm:ss\") {\r\n  let ms = toMs(time, format);\r\n  return Math.floor(ms / SECOND);\r\n}\r\n\r\n// =============================================================================\r\n// Utility functions\r\n// =============================================================================\r\n\r\nfunction formatTime(time, format) {\r\n  let showMs;\r\n  let showSc;\r\n  let showHr;\r\n\r\n  switch (format.toLowerCase()) {\r\n    case \"hh:mm:ss.sss\":\r\n      showMs = true;\r\n      showSc = true;\r\n      showHr = true;\r\n      break;\r\n    case \"hh:mm:ss\":\r\n      showMs = !!time.miliseconds;\r\n      showSc = true;\r\n      showHr = true;\r\n      break;\r\n    case \"hh:mm\":\r\n      showMs = !!time.miliseconds;\r\n      showSc = showMs || !!time.seconds;\r\n      showHr = true;\r\n      break;\r\n    case \"mm:ss\":\r\n      showMs = !!time.miliseconds;\r\n      showSc = true;\r\n      showHr = !!time.hours;\r\n      break;\r\n    case \"mm:ss.sss\":\r\n      showMs = true;\r\n      showSc = true;\r\n      showHr = !!time.hours;\r\n      break;\r\n    default:\r\n      throw new Error(TIME_FORMAT_ERRMSG);\r\n  }\r\n\r\n  let hh = zeroFill(2, time.hours);\r\n  let mm = zeroFill(2, time.minutes);\r\n  let ss = zeroFill(2, time.seconds);\r\n  let sss = zeroFill(3, time.miliseconds);\r\n\r\n  return (\r\n    (time.negative ? \"-\" : \"\") +\r\n    (showHr\r\n      ? showMs\r\n        ? `${hh}:${mm}:${ss}.${sss}`\r\n        : showSc\r\n        ? `${hh}:${mm}:${ss}`\r\n        : `${hh}:${mm}`\r\n      : showMs\r\n      ? `${mm}:${ss}.${sss}`\r\n      : `${mm}:${ss}`)\r\n  );\r\n}\r\n",{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":5,"column":10,"nodeType":"136","messageId":"137","endLine":5,"endColumn":18},{"ruleId":"134","severity":1,"message":"138","line":10,"column":8,"nodeType":"136","messageId":"137","endLine":10,"endColumn":14},{"ruleId":"134","severity":1,"message":"139","line":14,"column":8,"nodeType":"136","messageId":"137","endLine":14,"endColumn":16},{"ruleId":"134","severity":1,"message":"140","line":16,"column":8,"nodeType":"136","messageId":"137","endLine":16,"endColumn":12},{"ruleId":"134","severity":1,"message":"141","line":17,"column":16,"nodeType":"136","messageId":"137","endLine":17,"endColumn":33},{"ruleId":"134","severity":1,"message":"142","line":17,"column":35,"nodeType":"136","messageId":"137","endLine":17,"endColumn":46},{"ruleId":"134","severity":1,"message":"143","line":17,"column":48,"nodeType":"136","messageId":"137","endLine":17,"endColumn":56},{"ruleId":"144","severity":1,"message":"145","line":33,"column":3,"nodeType":"146","messageId":"147","endLine":35,"endColumn":4},{"ruleId":"130","replacedBy":"148"},{"ruleId":"132","replacedBy":"149"},{"ruleId":"134","severity":1,"message":"135","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":25},{"ruleId":"134","severity":1,"message":"150","line":2,"column":10,"nodeType":"136","messageId":"137","endLine":2,"endColumn":25},{"ruleId":"134","severity":1,"message":"151","line":3,"column":10,"nodeType":"136","messageId":"137","endLine":3,"endColumn":16},{"ruleId":"134","severity":1,"message":"152","line":3,"column":18,"nodeType":"136","messageId":"137","endLine":3,"endColumn":25},{"ruleId":"134","severity":1,"message":"153","line":3,"column":27,"nodeType":"136","messageId":"137","endLine":3,"endColumn":38},{"ruleId":"134","severity":1,"message":"154","line":3,"column":40,"nodeType":"136","messageId":"137","endLine":3,"endColumn":52},{"ruleId":"134","severity":1,"message":"155","line":4,"column":8,"nodeType":"136","messageId":"137","endLine":4,"endColumn":19},{"ruleId":"134","severity":1,"message":"156","line":5,"column":8,"nodeType":"136","messageId":"137","endLine":5,"endColumn":16},{"ruleId":"134","severity":1,"message":"157","line":9,"column":8,"nodeType":"136","messageId":"137","endLine":9,"endColumn":14},{"ruleId":"134","severity":1,"message":"158","line":59,"column":13,"nodeType":"136","messageId":"137","endLine":59,"endColumn":23},{"ruleId":"134","severity":1,"message":"159","line":81,"column":13,"nodeType":"136","messageId":"137","endLine":81,"endColumn":26},{"ruleId":"160","severity":1,"message":"161","line":159,"column":31,"nodeType":"162","messageId":"163","endLine":159,"endColumn":49},{"ruleId":"134","severity":1,"message":"164","line":184,"column":19,"nodeType":"136","messageId":"137","endLine":184,"endColumn":25},{"ruleId":"165","severity":1,"message":"166","line":78,"column":15,"nodeType":"167","messageId":"168","endLine":78,"endColumn":17},{"ruleId":"165","severity":1,"message":"166","line":78,"column":25,"nodeType":"167","messageId":"168","endLine":78,"endColumn":27},{"ruleId":"165","severity":1,"message":"166","line":78,"column":36,"nodeType":"167","messageId":"168","endLine":78,"endColumn":38},{"ruleId":"169","severity":1,"message":"170","line":16,"column":7,"nodeType":"171","endLine":20,"endColumn":8},{"ruleId":"169","severity":1,"message":"170","line":24,"column":7,"nodeType":"171","endLine":28,"endColumn":8},{"ruleId":"169","severity":1,"message":"170","line":34,"column":13,"nodeType":"171","endLine":34,"endColumn":69},{"ruleId":"169","severity":1,"message":"170","line":38,"column":13,"nodeType":"171","endLine":38,"endColumn":67},{"ruleId":"134","severity":1,"message":"172","line":1,"column":30,"nodeType":"136","messageId":"137","endLine":1,"endColumn":36},{"ruleId":"134","severity":1,"message":"173","line":2,"column":10,"nodeType":"136","messageId":"137","endLine":2,"endColumn":17},{"ruleId":"134","severity":1,"message":"140","line":3,"column":8,"nodeType":"136","messageId":"137","endLine":3,"endColumn":12},{"ruleId":"174","severity":1,"message":"175","line":14,"column":6,"nodeType":"176","endLine":14,"endColumn":8,"suggestions":"177"},{"ruleId":"134","severity":1,"message":"178","line":28,"column":9,"nodeType":"136","messageId":"137","endLine":28,"endColumn":13},{"ruleId":"134","severity":1,"message":"179","line":3,"column":10,"nodeType":"136","messageId":"137","endLine":3,"endColumn":23},{"ruleId":"134","severity":1,"message":"180","line":3,"column":31,"nodeType":"136","messageId":"137","endLine":3,"endColumn":39},{"ruleId":"181","severity":1,"message":"182","line":62,"column":11,"nodeType":"183","endLine":62,"endColumn":37},{"ruleId":"134","severity":1,"message":"184","line":101,"column":11,"nodeType":"136","messageId":"137","endLine":101,"endColumn":18},{"ruleId":"130","replacedBy":"185"},{"ruleId":"132","replacedBy":"186"},{"ruleId":"134","severity":1,"message":"187","line":1,"column":10,"nodeType":"136","messageId":"137","endLine":1,"endColumn":22},{"ruleId":"134","severity":1,"message":"188","line":4,"column":10,"nodeType":"136","messageId":"137","endLine":4,"endColumn":15},{"ruleId":"160","severity":1,"message":"161","line":177,"column":29,"nodeType":"162","messageId":"163","endLine":177,"endColumn":51},{"ruleId":"189","severity":1,"message":"190","line":3,"column":1,"nodeType":"191","endLine":3,"endColumn":50},{"ruleId":"192","severity":1,"message":"193","line":1,"column":1,"nodeType":"194","messageId":"195","endLine":1,"endColumn":14,"fix":"196"},"no-native-reassign",["197"],"no-negated-in-lhs",["198"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Status' is defined but never used.","'WebVideo' is defined but never used.","'Icon' is defined but never used.","'arrayBufferToBlob' is defined but never used.","'readBlobURL' is defined but never used.","'download' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["197"],["198"],"'FontAwesomeIcon' is defined but never used.","'faPlay' is defined but never used.","'faPause' is defined but never used.","'faAngleLeft' is defined but never used.","'faAngleRight' is defined but never used.","'ReactPlayer' is defined but never used.","'Dropzone' is defined but never used.","'Slider' is defined but never used.","'percentage' is assigned a value but never used.","'totalDuration' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'seekResolve'.","ArrowFunctionExpression","unsafeRefs","'loaded' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useRef' is defined but never used.","'isVideo' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'props.onFileSelected'. Either include it or remove the dependency array.","ArrayExpression",["199"],"'toMB' is assigned a value but never used.","'formatSeconds' is defined but never used.","'leftZero' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'endTime' is assigned a value but never used.",["197"],["198"],"'EventEmitter' is defined but never used.","'fromS' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"200","text":"201"},"no-global-assign","no-unsafe-negation",{"desc":"202","fix":"203"},[0,13],"","Update the dependencies array to be: [props.onFileSelected]",{"range":"204","text":"205"},[412,414],"[props.onFileSelected]"]